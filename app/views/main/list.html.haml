- content_for :head do
  = javascript_include_tag "announcement_refresh"

= user_title_bar(@user)
- if @user.section
  passcode for CP Unofficial Logo voting is
  %strong= @user.section
  %br

- if (GraderConfiguration.contest_mode?) and (@user.site!=nil) and (@user.site.started!=true)
  %p=t 'main.start_soon'

.row
  .col-lg-7
    - if GraderConfiguration.show_submitbox_to?(@user)
      .card.border-primary
        .card-header.text-bg-primary
          Submission
        .card-body
          = render 'submission_box'
    - if GraderConfiguration.show_tasks_to?(@user)
      .mt-3
        -#
          #prob-list-template.hide
            = form_with url: prob_grop_main_path, id: 'prob-list-form' do
              .row
                .col-3.col-form-label
                  %label Problem Group
                .col-9
                  %select#prob-group-select.form-control.select2{onchange: 'prob_group_change()'}
                    = options_for_select @groups
        = turbo_frame_tag :problem_list, data: {turbo: true} do
          = render partial: 'problem_list', locals: {problems: @problems, groups: @groups}
        -#
          - if not GraderConfiguration.multicontests?
              %table#main_table.table.table-striped.table-condensed{width: '100%'}
                %thead
                  %tr
                    %th Task name
                    %th.all Full name
                    %th # of sub(s)
                    %th.all Results
                    %th.all
                %tbody
                  = render :partial => 'problem', :collection => @problems
          - else
            - @contest_problems.each do |cp|
              - if cp[:problems].length > 0
                %h2{:class =>'contest-title'}
                  = "#{cp[:contest] ? cp[:contest].title : 'Public problems'}"
                %table.info
                  %tr.info-head
                    %td Task name
                    %td Full name
                    %td # of sub(s)
                    %td Results
                    %td
                  = render :partial => 'problem', :collection => cp[:problems]
  .col-lg-5
    .card
      .card-header
        Announcement
        = link_to 'Manage', announcements_path, class: 'btn btn-secondary btn-sm'
      %ul.list-group.list-group-flush
        = render :partial => 'announcement', :collection => @announcements
-#
  %script{:type => 'text/javascript'}
    = "Announcement.refreshUrl = '#{url_for :controller => 'main', :action => 'announcements'}';".html_safe
    Announcement.registerRefreshEventTimer();

= render partial: 'shared/msg_modal', locals: {header_msg: 'Compiler messaage', body_msg: 'placeholder'}
:javascript
  $(document).on('import-map-loaded',(e) => {
    $("#main_table").DataTable({
      sorting: false,
      paging: false,
      responsive: true,
      dom: "<'row'<'#prob-group.col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>" +
        "<'row'<'col-sm-12'tr>>" +
        "<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
    })
  });

  function prob_group_change() {
    console.log('asdf')
  }
