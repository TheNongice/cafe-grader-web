- content_for :head do
  <meta http-equiv ="refresh" content="60"/>

%h1 Grader information

%p
  = link_to 'Refresh', { :action => 'list' }, class: 'btn btn-info'


-#
  .panel.panel-primary
    .panel-heading
      Grader control:
    .panel-body
      =link_to 'Start Graders in grading env', { action: 'start_grading'}, class: 'btn btn-secondary'
      =link_to 'Start Graders in exam env', { action: 'start_exam'}, class: 'btn btn-secondary'
      =link_to 'Stop all running Graders', { action: 'stop_all'}, class: 'btn btn-secondary'
      =link_to 'Clear all data', { action: 'clear_all'}, class: 'btn btn-secondary'

.row
  .col-md-6
    %h4.mt-3 Queue Status
    .row
      .col-3.text-end.h3
        = @wait_count['compile'] || 0
      .col-auto.text-secondary.d-flex.align-items-end.mb-2
        to be compiled
    .row
      .col-3.text-end.h3
        = @wait_count['evaluate'] || 0
      .col-auto.text-secondary.d-flex.align-items-end.mb-2
        to be evaluated
    .row
      .col-3.text-end.h3
        = @wait_count['score'] || 0
      .col-auto.text-secondary.d-flex.align-items-end.mb-2
        to be scored

    %h4.mt-3 Worker and Grader
    %table.table
      %thead
        %tr
          %th worker id
          %th box id
          %th host
          %th Last Heartbeat
          %th Status
          %th Job
          %th Action
      %tbody
        - @graders.each do |grader|
          %tr
            %td= grader.worker_id
            %td= grader.box_id
            %td
            %td= "#{time_ago_in_words(grader.last_heartbeat, include_seconds: true) if grader.last_heartbeat} ago"
            %td= grader.status
            %td= grader.task_id
            %td
              - if grader.enabled?
                = button_to 'Disable',graders_set_enabled_path(grader,0), class: 'btn btn-secondary btn-sm'
              - else
                = button_to 'Enable', graders_set_enabled_path(grader,1), class: 'btn btn-primary btn-sm'



    


    -#
      %h2 Current graders

      = render :partial => 'grader_list', :locals => {:grader_list => @grader_processes}

      %h2 Stalled graders

      = render :partial => 'grader_list', :locals => {:grader_list => @stalled_processes}

      %h2 Terminated graders

      %p= link_to 'Clear data for terminated graders', { action: 'clear_terminated'}, class: 'btn btn-default', method: 'post'

      = render :partial => 'grader_list', :locals => {:grader_list => @terminated_processes}
  .col-md-6
    %h2 Last 20 submissions
    %table.table.table-striped.table-condensed
      %thead
        %th ID
        %th User
        %th Problem
        %th Submitted
        %th Graded
        %th Result
      %tbody
        - @submission.each do |sub|
          %tr.inactive
            %td= link_to sub.id, submission_path(sub.id)
            %td= ("" unless sub.user) || link_to(sub.try(:user).try(:full_name), stat_user_path(sub.user.id))
            %td= ("" unless sub.problem) || link_to(sub.try(:problem).try(:full_name), stat_problem_path(sub.problem.id))
            %td= "#{time_ago_in_words(sub.submitted_at)} ago"
            %td= sub.graded_at ? "#{time_ago_in_words(sub.graded_at)} ago" : " "
            %td= sub.grader_comment
    %h2 Ungraded submission
    %table.table.table-striped.table-condensed
      %thead
        %th ID
        %th User
        %th Problem
        %th Submitted
        %th Graded
        %th Result
      %tbody
        - @backlog_submission.each do |sub|
          %tr.inactive
            %td= link_to sub.id, submission_path(sub.id)
            %td= ("" unless sub.user) || link_to( sub.try(:user).try(:full_name), stat_user_path(sub.user.id))
            %td= ("" unless sub.problem) || link_to( sub.try(:problem).try(:full_name), stat_problem_path(sub.problem.id))
            %td= "#{time_ago_in_words(sub.submitted_at)} ago"
            %td= sub.graded_at ? "#{time_ago_in_words(sub.graded_at)} ago" : " "
            %td= sub.grader_comment



