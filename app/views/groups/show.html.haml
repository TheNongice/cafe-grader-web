%h1 Editing Group members and problems
.row.my-4
  .col-md-4
    .card
      .card-body
        %h4 Group details
        .row.mb-3
          .col-md-12
            %b Name:
            = @group.name
        .row.mb-3
          .col-md-12
            %b Description:
            = @group.description
        .row.mb-3
          .col-md-6
            = link_to 'Edit', edit_group_path(@group), class: 'btn btn-primary'
            = link_to 'Back', groups_path, class: 'btn btn-outline-secondary mx-2'
  .col-md-8
    = render partial: 'group_help'
.row.my-4
  .col-md-6
    .card
      .card-header
        Users of this group

      .card-body
        %ul
          %li
            If you want to add several users to a group, it may be easier to just re-import the users in
            = link_to 'New list of users', new_list_user_admin_index_path
            page. You can also use
            = link_to 'Bulk Manage User', bulk_manage_user_admin_index_path
            page.
        =form_tag add_user_group_path(@group), class: 'form-inline', data: {turbo: true} do
          .row
            .col-auto
              =label_tag :user_id, "User", class: 'col-form-label'
            .col-auto
              =select_tag :user_id, options_from_collection_for_select(User.all,'id','login_with_name'), class: 'select2', multiple: true, style: 'width: 25em';
            .col-auto
              =submit_tag "Add",class: 'btn btn-primary'
        = render partial: 'group_users'
  .col-md-6
    .card
      .card-header
        Problems of this group
      .card-body
        %ul
          %li
            If you want to add several problem to a group, it may be easier to bulk manage them in the
            = link_to 'Bulk Manage Problems', manage_problems_path
            page
        =form_tag add_problem_group_path(@group), data: {turbo: true} do
          .row
            .col-auto
              =label_tag :problem_id, "Problem",class: 'col-form-label'
            .col-auto
              =select_tag :problem_id, options_from_collection_for_select(Problem.all,'id','long_name'), class: 'select2', multiple: true, style: 'width: 25em';
            .col-auto
              =submit_tag "Add",class: 'btn btn-primary'
        = render partial: 'group_problems'

= render 'shared/msg_modal'

:javascript
  function reload_table() {

    // user tables
    user_role_column = 2
    $('#user_table').DataTable({
      columnDefs: [{visible: false, targets: user_role_column}, {orderable: false, targets: [4,5,6]} ],
      destroy: true,
      paging: false,
      orderFixed: [2,'desc'],
      order: [[0,'asc']],
      drawCallback: function (settings) {
        var api = this.api();
        var rows = api.rows({ page: 'current' }).nodes();
        var last = null;
        api.column(user_role_column, { page: 'current' })
          .data()
          .each(function (group, i) {
              if (last !== group) {

                // set text for group row
                if (group == 'editor') {
                  role_group_text = '<tr class="table-success"><td colspan="6"> Editors (Can edit any problems) </td></tr>'
                } else if (group == 'reporter') {
                  role_group_text = '<tr class="table-warning"><td colspan="6"> Reporters (Can view submissions of any users) </td></tr>'
                } else {
                  role_group_text = '<tr class="table-info"><td colspan="6"> Users (Can only use available problems) </td></tr>'
                }

                //prepend group row
                $(rows).eq(i).before(role_group_text);
                last = group;
              }
          });
      },
    })

    // problem table
    $('#problem_table').DataTable({
      destroy: true,
      paging: false,
    })
  }
  $(function() {
    reload_table();
  });
