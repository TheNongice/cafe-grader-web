.row.mb-3
  .col-md-4
    .card.shadow-sm.mb-3
      .card-body
        %h3 System Mode
        .row
          .col
            .alert.text-center{class: "alert-#{mode_to_class}"}
              The system is in
              %strong
                = mode_to_text
                Mode
        .row
          .col-auto.col-form-label
            Change mode to
          .col-auto.p-1
            = button_to "Normal", set_system_mode_contests_path, params: {mode: 'standard'}, class: 'btn btn-sm btn-outline-success'
          .col-auto.p-1
            = button_to "Contest", set_system_mode_contests_path, params: {mode: 'contest'}, class: 'btn btn-sm btn-outline-warning'
          -#
            .col-auto.p-1
              = button_to "Individual Contest", set_system_mode_contests_path, params: {mode: 'indv-contest'}, class: 'btn btn-sm btn-outline-warning'
          .col-auto.p-1
            = button_to "Analysis", set_system_mode_contests_path, params: {mode: 'analysis'}, class: 'btn btn-sm btn-outline-info'
  .col-md-8
    = render partial: 'contest_help'

.card.shadow-sm{data: {controller: 'contest'}}
  .card-body
    %h3 Contests
    %p= link_to 'New contest', new_contest_path, class: 'btn btn-success'
    %table#contest_table.table.table-striped
      %thead
        %tr
          %th Name
          %th Description
          %th Enabled
          %th Start
          %th End
          %th
          %th
          %th
  -# hidden contest action form
  = form_with url: contest_action_contests_path, html: {'data-contest-target': 'contestForm', id: 'do-contest-form',
    data: {turbo: true, action: 'turbo:submit-end->contest#afterContestAction', 'turbo-confirm': '.'}} do |f|
    = f.hidden_field :contest_id, 'data-contest-target': 'contestFormContestID'
    = f.hidden_field :command, 'data-contest-target': 'contestFormCommand'

:javascript
  $(() => {
    //on doc ready
    table_config = {
      processing: true,
      rowId: 'id',
      destroy: true,
      paging: false,
      ajax: {
        url: "#{index_query_contests_path}",
        type: 'POST',
        headers: { 'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content'), },
      },
      layout: {
        topStart: 'info',
        topEnd: 'search',
      },
      columns: [ 
        {data: 'name'},
        {data: 'description'},
        {data: 'id', render: dt_button_renderer(null, {element_type: 'switch', action: 'contest#postContestAction', command: 'toggle', checked_data_field: 'enabled'})},
        {data: 'start', render: dt_datetime_renderer()},
        {data: 'stop', render: dt_datetime_renderer()},
        {data: null, render: dt_link_renderer(`${msi('settings','md-18')} Manage`, {path: '#{contest_path(-123)}'})},
        {data: null, render: dt_link_renderer(`${msi('summarize','md-18')} Watch`, {path: '#{view_contest_path(-123)}'})},
        {data: null, render: dt_link_renderer(`${msi('delete','md-18')} Destroy`, {path: '#{contest_path(-123)}', className: 'link-danger', })},
      ],
      columnDefs: [{orderable: false, targets: [3,4,5,6]} ],
      drawCallback: function (settings) {
        var api = this.api();
        api.columns.adjust()
      },
    }

    table = $('#contest_table').DataTable(table_config)

  })
