%h1 Problems
.row
  .col-md-5
    = link_to 'Import problems', {:action => 'import'}, class: 'btn btn-success m-1'
    = link_to 'Bulk Manage', { action: 'manage'}, class: 'btn btn-info m-1'
    = link_to 'Turn off all problems', {:action => 'turn_all_off'}, class: 'btn btn-secondary m-1'
    = link_to 'Turn on all problems', {:action => 'turn_all_on'}, class: 'btn btn-secondary m-1'
  .col-md-7
    .alert.alert-warning
      Setting
      %span.font-monospace.rounded.bg-light.p-1 system.use_problem_group
      is
      %strong= "#{GraderConfiguration.use_problem_group?}."
      - if GraderConfiguration.use_problem_group?
        Normal users will see only
        %strong enabled
        problems in the groups that there are memebers of.
        You can manage groups at
        = link_to 'Manage/User Groups', groups_path
      - else
        Normal users will see
        %strong every
        problems that are
        %strong enabled.

%table#main_table.table.table-condense.table-hover
  %thead
    %tr
      %th Name
      %th Full name
      %th Difficulty
      %th.text-end
        A - D(T)
        = render partial: 'tooltip', locals: {title: 'number of attachments, datasets, testcases of the problem'}
      %th.text-end Model Solution
      %th Tags
      %th
        Submit
        = render partial: 'tooltip', locals: {title: 'Admin can always submit to any problem'}
      %th Date added
      %th.text-center
        Avail?
        = render partial: 'tooltip', locals: {title: 'Let user submits to this problem?'}
      %th.text-center
        View Data?
        = render partial: 'tooltip', locals: {title: 'Let user view the testcase of this problem?'}
      - if GraderConfiguration.multicontests?
        %th Contests
      %th.text-center
      %th.text-center
      %th.text-center
  %tbody
    - for problem in @problems
      %tr{:class => "#{(problem.available) ? "table-success" : ""}", :id => "prob-#{problem.id}", :name => "prob-#{problem.id}"}
        - @problem=problem
        %td= problem.name
        %td
          = problem.full_name
          = link_to_description_if_any "[Read <span class='mi mi-bs md-18'>description</span>]".html_safe, problem
          = link_to "[Files <span class='mi mi-bs md-18'>archive</span>]".html_safe, get_attachment_problem_path(problem) if problem.attachment.attached?
        %td= render_star(problem.difficulty)
        %td.text-end= "#{problem.attachment.attached? ? 1 : 0} - #{problem.dataset_count}(#{problem.tc_count})"
        %td.text-end= "#{problem.ms_count}"
        %td
          - problem.tags.each do |t|
            %span.badge.text-bg-secondary.bg-opacity-100= t.name
        %td= link_to "Submit", direct_edit_problem_submissions_path(problem,@current_user.id), class: 'btn btn-sm btn-primary'
        %td= problem.date_added
        %td= toggle_button(@problem.available?, toggle_problem_path(@problem), "problem-avail-#{@problem.id}")
        %td= toggle_button(@problem.view_testcase?, toggle_view_testcase_problem_path(@problem), "problem-view-testcase-#{@problem.id}")
        - if @multi_contest
          %td
            = problem.contests.collect { |c| c.name }.join(', ')
        %td= link_to 'Stat', {:action => 'stat', :id => problem.id}, class: 'btn btn-info btn-sm btn-block'
        %td= link_to 'Edit', {:action => 'edit', :id => problem}, class: 'btn btn-info btn-sm btn-block'
        %td= link_to 'Destroy', { :action => 'destroy', :id => problem }, 'data-confirm': 'Are you sure?', :method => :delete, class: 'btn btn-danger btn-sm btn-block'

:javascript
  function init_table() {
    $("#main_table").DataTable({
      sorting: false,
      columnDefs: [
        { targets: [3,4], sortable: false },
      ],
      paging: false,
      responsive: true,
      dom: "<'row'<'#prob-group.col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>" +
        "<'row'<'col-sm-12'tr>>" +
        "<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
    })
  }

  $(document).on('import-map-loaded',(e) => {
    init_table();
  });

